name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
    - uses: actions/setup-node@v1
    - name: Test the Testcases 
      run: |
        npm install
        npm run build --if-present
    - name: Login to Docker Hub
      run: docker login --username "${{ secrets.Docker_username }}" --password "${{ secrets.Docker_password }}"
    - name: Build the stack
      run: |
        docker login --username "${{ secrets.Docker_username }}" --password "${{ secrets.Docker_password }}"
        cd frontend && docker build . --file Dockerfile -t ismayil10/react-app
        docker push ismayil10/react-app
        cd ..
        cd backend && docker build . --file Dockerfile -t ismayil10/api-server
        docker push ismayil10/api-server

    - name: Configure SSH
      run: |
          git config --global user.email "mohammedismayil10@gmail.com"
          git config --global user.name "mohammedismayil"
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName "${{ secrets.SSH_HOST }}"
            User "${{ secrets.SSH_USER }}"
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
    - name: Starting the Docker compose
      run: |
         ssh staging 'docker login --username "${{ secrets.Docker_username }}" --password "${{ secrets.Docker_password }}"'
